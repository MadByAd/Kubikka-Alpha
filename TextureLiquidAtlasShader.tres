[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://TextureBlockAtlas.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.3.stable's SpatialMaterial.
shader_type spatial;
render_mode async_visible, blend_mix, depth_draw_alpha_prepass, cull_back, diffuse_burley, specular_schlick_ggx, vertex_lighting;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	ROUGHNESS=roughness;
	if (VERTEX.y > 0.0) {
		VERTEX.y += sin(TIME) * 0.08 - 0.15;
	}
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	ALPHA = albedo.a * albedo_tex.a;
}
"

[resource]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.0
shader_param/metallic = null
shader_param/roughness = 1.0
shader_param/point_size = null
shader_param/uv1_scale = null
shader_param/uv1_offset = Vector3( 1, 1, 0 )
shader_param/uv2_scale = null
shader_param/uv2_offset = null
shader_param/texture_albedo = ExtResource( 1 )
